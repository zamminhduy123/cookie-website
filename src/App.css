@import "tailwindcss";
@layer theme {
  :root {
    --crimson: #9A0002;
    --strawberry: #FEB3B0;
    --choco: #4B1E1E;
    --vanilla: #FFF5F0;
    --honey: #FBC252;
    --cocoa: #6D3F27;
  }
}

@font-face {
  font-family: 'Abstract Groovy';
  src: url('/font/aAbstractGroovy.ttf');
  font-weight: 600;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-style: normal;
}

@font-face {
  font-family: 'Sugar Peach';
  src: url('/font/sugar-peachy-regular.ttf') format('truetype');
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: 'Apple Peach';
  src: url('/font/apple-peach-regular.ttf') format('truetype');
  font-weight: normal;
  font-style: normal;
}

#root {
  position: relative;
  box-sizing: border-box;
  overflow-x: hidden;
  font-family: 'Montserrat', sans-serif;
}
@keyframes marquee-left {
  0% {
    transform: translateX(0%);
  }
  100% {
    transform: translateX(-90%);
  }
}

.animate-marquee-left {
  animation: marquee-left 300s linear infinite;
}

@keyframes marquee-right {
  0% {
    transform: translateX(-90%);
  }
  100% {
    transform: translateX(0%);
  }
}

#smooth-wrapper {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  overflow: hidden; 
}

#smooth-content {
  overflow: visible;
  width: 100%;
}

.animate-marquee-right {
  animation: marquee-right 300s linear infinite;
}
/* 
/* ADD: CSS Utilities (fallback if not using Tailwind yet) */
.bg-crimson { background-color: var(--crimson) !important; }
.text-crimson { color: var(--crimson) !important; }
.bg-strawberry { background-color: var(--strawberry) !important; }
.bg-light { background-color: #FFE7E6 !important; }
.text-strawberry { color: var(--strawberry) !important; }
.border-crimson { border-color: var(--crimson) !important; }
.border-strawberry { border-color: var(--strawberry) !important; }

.apple-peach {
  font-family: 'Apple Peach', sans-serif;
}

canvas {
  position: fixed;
  top: 0;
  left: 0;
}

/* 
  The "stage" container.
  Its height is 200vh, meaning the scroll-based animation will last for a scroll
  distance equal to one full viewport height (200vh total height - 100vh for the pinned element).
*/
.pin-container {
  position: relative;
  width: 100%;
}

/* 
  SECTION 1: Pinned and Overlapped
  - `position: sticky` is the magic that holds it in place.
  - `z-index: 1` ensures it's below the sliding section.
*/
.pinned-section {
  position: sticky;
  top: 0;
  width: 100%;
  /* background: url('https://i.imgur.com/KxOQ0Gg.jpeg') center center / cover no-repeat; */
  z-index: 1;
}

/* 
  SECTION 2: Slides Up
  - `position: absolute` places it within the pin-container's coordinate system.
  - `z-index: 2` makes it render on top of the pinned section.
  - The `y` transform from Framer Motion will control its vertical slide.
*/
.sliding-section {
  position: absolute;
  top: 0;
  height: 100vh; /* Takes up the full screen */
  width: 100%;
  background-color: #6d3f27; /* Brown flavor color */
  z-index: 2;
  display: grid;
  place-content: center;
  text-align: center;
}
.sliding-section h2 {
  font-size: 5rem;
  font-weight: bold;
  color: #f7b733; /* Yellowish text color */
  text-transform: uppercase;
  max-width: 80%;
  margin: 0 auto;
}

@keyframes logo-spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

@media (prefers-reduced-motion: no-preference) {
  a:nth-of-type(2) .logo {
    animation: logo-spin infinite 20s linear;
  }
}

.card {
  padding: 2em;
}

.read-the-docs {
  color: #888;
}

/* ----- Global font ----- */
html,
body {
  font-family: 'Montserrat', sans-serif;
}

/* Hide the default slick dots */
.slick-dots li button:before {
  content: '' !important;
}
.slick-dots li {
  margin: 0;
  width: fit-content !important
}

/* Custom dots container */
.custom-dots-container {
  position: absolute;
  bottom: -30px;
  width: 100%;
  padding: 0;
  margin: 0;
  list-style: none;
  text-align: center;
  display: flex;
  justify-content: center;
  z-index: 100;
  gap: 16px
}
/* The wrapper for our custom dot, which will be the visible element */
.custom-dot-wrapper {
  background-color: var(--strawberry); /* Inactive color */
  transition: all 0.3s ease;
  position: relative;
  overflow: hidden;
}

/* Style for the INACTIVE dots (circles) */
.custom-dot-wrapper:not(.active) {
  width: 10px;
  height: 10px;
  border-radius: 50%;
}

/* Style for the ACTIVE dot (pill shape) */
.custom-dot-wrapper.active {
  width: 30px;
  height: 10px;
  border-radius: 5px; /* Pill shape */
  background-color: var(--strawberry); /* Background of the progress bar */
}

/* The actual filling progress bar */
.progress-fill {
  height: 100%;
  background-color: var(--crimson); /* Fill color */
  border-radius: 5px;
  /* Width is set by inline style in React */
  transition: width 0.1s linear; /* Smooths out the animation */
}